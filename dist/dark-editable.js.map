{"version":3,"file":"dark-editable.js","sources":["../src/Modes/BaseMode.ts","../src/Modes/PopupMode.ts","../src/Modes/InlineMode.ts","../src/Types/BaseType.ts","../src/Types/InputType.ts","../src/Types/TextAreaType.ts","../src/Types/SelectType.ts","../src/Types/DateType.ts","../src/Types/DateTimeType.ts","../src/dark-editable.ts"],"sourcesContent":["import DarkEditable from '../dark-editable.ts';\r\n\r\nexport default class BaseMode{\r\n    context: DarkEditable;\r\n\r\n    constructor(context: DarkEditable) {\r\n        if(this.constructor === BaseMode){\r\n            throw new Error(`It's abstract class`);\r\n        }\r\n        this.context = context;\r\n    }\r\n    event_show(){\r\n        this.context.typeElement.hideError();\r\n        if(!this.context.typeElement.element){\r\n            throw new Error('Element is missing!');\r\n        }\r\n        this.context.typeElement.element.value = this.context.getValue();\r\n        this.context.element.dispatchEvent(new CustomEvent('show', { detail: { DarkEditable: this.context } }));\r\n    }\r\n    event_shown(){\r\n        this.context.element.dispatchEvent(new CustomEvent('shown', { detail: { DarkEditable: this.context } }));\r\n    }\r\n    event_hide(){\r\n        this.context.element.dispatchEvent(new CustomEvent('hide', { detail: { DarkEditable: this.context } }));\r\n    }\r\n    event_hidden(){\r\n        this.context.element.dispatchEvent(new CustomEvent('hidden', { detail: { DarkEditable: this.context } }));\r\n    }\r\n    init(){\r\n        throw new Error('Method `init` not define!');\r\n    }\r\n    enable(){\r\n        throw new Error('Method `enable` not define!');\r\n    }\r\n    disable(){\r\n        throw new Error('Method `disable` not define!');\r\n    }\r\n    hide(){\r\n        throw new Error('Method `hide` not define!');\r\n    }\r\n}","import { Popover } from 'bootstrap';\r\nimport BaseMode from './BaseMode.js';\r\n\r\nexport default class PopupMode extends BaseMode{\r\n\r\n    popover: Popover|null = null;\r\n\r\n    init(){\r\n\t    const options = {\r\n            container: 'body',\r\n            content: this.context.typeElement.create(),\r\n            html: true,\r\n            customClass: 'dark-editable',\r\n            title: this.context.options.title,\r\n\t    };\r\n\t    this.popover = new Popover(this.context.element, Object.assign(\r\n\t\t    options, \r\n\t\t    this.context.options.popoverOptions\r\n\t    ));\r\n        this.context.element.addEventListener('show.bs.popover', () => {\r\n            this.event_show();\r\n        });\r\n        this.context.element.addEventListener('shown.bs.popover', () => {\r\n            this.event_shown();\r\n        });\r\n        this.context.element.addEventListener('hide.bs.popover', () => {\r\n            this.event_hide();\r\n        });\r\n        this.context.element.addEventListener('hidden.bs.popover', () => {\r\n            this.event_hidden();\r\n        });\r\n\r\n        document.addEventListener('click', (e) => {\r\n            const target = <HTMLElement>e.target;\r\n            // @ts-ignore\r\n            if(this.popover && target === this.popover.tip || target === this.context.element) return;\r\n            let current = target.parentNode;\r\n            while(current){\r\n                // @ts-ignore\r\n                if(current === this.popover.tip) return;\r\n                current = current.parentNode;\r\n            }\r\n            this.hide();\r\n        })\r\n    }\r\n    enable(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.enable();\r\n        }\r\n    }\r\n    disable(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.disable();\r\n        }\r\n    }\r\n    hide(): void\r\n    {\r\n        if(this.popover){\r\n            this.popover.hide();\r\n        }\r\n    }\r\n}","import BaseMode from './BaseMode.js';\r\n\r\nexport default class InlineMode extends BaseMode{\r\n    init(){\r\n        const open = () => {\r\n            if(!this.context.options.disabled){\r\n                const item = this.context.typeElement.create();\r\n                this.event_show();\r\n                this.context.element.removeEventListener('click', open);\r\n                this.context.element.innerHTML = '';\r\n                this.context.element.append(item);\r\n                this.event_shown();\r\n            }\r\n        }\r\n        this.context.element.addEventListener('click', open);\r\n    }\r\n    enable(){\r\n\r\n    }\r\n    disable(){\r\n\r\n    }\r\n    hide(){\r\n        this.event_hide();\r\n        this.context.element.innerHTML = this.context.getValue();\r\n        setTimeout(() => {\r\n            this.init();\r\n            this.event_hidden();\r\n        }, 100);\r\n    }\r\n}","import DarkEditable from '../dark-editable.ts';\r\nimport BaseTypeButtons from '../Interfaces/BaseTypeButtons.ts';\r\n\r\nexport default class BaseType{\r\n    context: DarkEditable;\r\n    element: HTMLInputElement|null = null;\r\n    error: HTMLElement|null = null;\r\n    form: HTMLElement|null = null;\r\n    load: HTMLElement|null  = null;\r\n    buttons: BaseTypeButtons = {success: null, cancel: null};\r\n\r\n    constructor(context: DarkEditable) {\r\n        if(this.constructor === BaseType){\r\n            throw new Error(`It's abstract class`);\r\n        }\r\n        this.context = context;\r\n    }\r\n\r\n    create(): HTMLElement\r\n    {\r\n        throw new Error('Method `create` not define!');\r\n    }\r\n\r\n    createContainer(element: HTMLInputElement): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        this.element = element;\r\n        this.error = this.createContainerError();\r\n        this.form = this.createContainerForm();\r\n        this.load = this.createContainerLoad();\r\n        this.form.append(element, this.load);\r\n        this.buttons.success = null;\r\n        this.buttons.cancel = null;\r\n        if(this.context.options.showbuttons){\r\n            this.buttons.success = this.createButtonSuccess();\r\n            this.buttons.cancel = this.createButtonCancel();\r\n            this.form.append(this.buttons.success, this.buttons.cancel);\r\n        }\r\n\r\n        div.append(this.error, this.form);\r\n        return div;\r\n    }\r\n\r\n    createContainerError(): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        div.classList.add('text-danger', 'fst-italic', 'mb-2', 'fw-bold');\r\n        div.style.display = 'none';\r\n        return div;\r\n    }\r\n\r\n    createContainerForm(): HTMLFormElement\r\n    {\r\n        const form = document.createElement(`form`);\r\n        form.classList.add('d-flex', 'align-items-start');\r\n        form.style.gap = '10px';\r\n        form.addEventListener('submit', async e => {\r\n            e.preventDefault();\r\n            const newValue = this.getValue();\r\n            if(this.context.options.send && this.context.options.id && this.context.options.url && (this.context.getValue() !== newValue)){\r\n                this.showLoad();\r\n                let msg;\r\n                try {\r\n                    const response = await this.ajax(newValue);\r\n                    if(response.ok){\r\n                        msg = await this.context.success(response, newValue);\r\n                    } else {\r\n                        msg = await this.context.error(response, newValue) || `${response.status} ${response.statusText}`;\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    msg = error;\r\n                }\r\n\r\n                if(msg){\r\n                    this.setError(msg);\r\n                    this.showError();\r\n                } else {\r\n                    this.setError('');\r\n                    this.hideError();\r\n                    this.context.setValue(this.getValue());\r\n                    this.context.modeElement.hide();\r\n                    this.initText();\r\n                }\r\n                this.hideLoad();\r\n            } else {\r\n                this.context.setValue(this.getValue());\r\n                this.context.modeElement.hide();\r\n                this.initText();\r\n            }\r\n            this.context.element.dispatchEvent(new CustomEvent('save', { detail: { DarkEditable: this.context } }));\r\n        })\r\n        return form;\r\n    }\r\n\r\n    createContainerLoad(): HTMLDivElement\r\n    {\r\n        const div = document.createElement(`div`);\r\n        div.style.display = 'none';\r\n        div.style.position = 'absolute';\r\n        div.style.background = 'white';\r\n        div.style.width = '100%';\r\n        div.style.height = '100%';\r\n        div.style.top = '0';\r\n        div.style.left = '0';\r\n        const loader = document.createElement(`div`);\r\n        loader.classList.add('dark-editable-loader');\r\n        div.append(loader);\r\n        return div;\r\n    }\r\n\r\n    createButton(): HTMLButtonElement\r\n    {\r\n        const button = document.createElement('button');\r\n        button.type = 'button';\r\n        button.classList.add('btn', 'btn-sm');\r\n        return button;\r\n    }\r\n\r\n    createButtonSuccess(): HTMLButtonElement\r\n    {\r\n        const btn_success = this.createButton();\r\n        btn_success.type = 'submit';\r\n        btn_success.classList.add('btn-success');\r\n        btn_success.innerHTML = '<i class=\"fa-solid fa-check\"></i>';\r\n        return btn_success;\r\n    }\r\n\r\n    createButtonCancel(): HTMLButtonElement\r\n    {\r\n        const btn_cancel = this.createButton();\r\n        btn_cancel.classList.add('btn-danger');\r\n        btn_cancel.innerHTML = '<i class=\"fa-solid fa-times\"></i>';\r\n        btn_cancel.addEventListener('click', () => {\r\n            this.context.modeElement.hide();\r\n        });\r\n        return btn_cancel;\r\n    }\r\n\r\n    hideLoad(): void\r\n    {\r\n        if(this.load){\r\n            this.load.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    showLoad(): void\r\n    {\r\n        if(this.load){\r\n            this.load.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    ajax(new_value: string): Promise<Response>\r\n    {\r\n        let url = this.context.options.url;\r\n        if(!url){\r\n            throw new Error('URL is required!');\r\n        }\r\n        if(!this.context.options.id){\r\n            throw new Error('pk is required!');\r\n        }\r\n        if(!this.context.options.name){\r\n            throw new Error('Name is required!');\r\n        }\r\n        const form = new FormData;\r\n        form.append('id', this.context.options.id);\r\n        form.append('name', this.context.options.name);\r\n        form.append('value', new_value);\r\n\r\n        if(this.context.options.ajaxOptions?.method === 'GET'){\r\n            const params: [string?] = [];\r\n            form.forEach((value, key) => {\r\n                params.push(`${key}=${value}`);\r\n            });\r\n            url += '?' + params.join('&');\r\n        }\r\n        \r\n\t\tconst ajaxOptions = {...this.context.options.ajaxOptions};\r\n        ajaxOptions.body = form;\r\n        return fetch(url, ajaxOptions);\r\n    }\r\n\r\n    async successResponse(_response: Response, _newValue: string): Promise<any>\r\n    {\r\n\r\n    }\r\n\r\n    async errorResponse(_response: Response, _newValue: string): Promise<any>\r\n    {\r\n\r\n    }\r\n\r\n    setError(errorMsg: string): void\r\n    {\r\n        if(this.error){\r\n            this.error.innerHTML = errorMsg;\r\n        }\r\n    }\r\n\r\n    showError(): void\r\n    {\r\n        if(this.error){\r\n            this.error.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    hideError(): void\r\n    {\r\n        if(this.error){\r\n            this.error.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    createElement(name: string): HTMLInputElement\r\n    {\r\n        const element = <HTMLInputElement>document.createElement(name);\r\n        element.classList.add('form-control');\r\n        if(this.context.options.required){\r\n            element.required = this.context.options.required;\r\n        }\r\n\t\tif(this.context.options.placeholder){\r\n            element.placeholder = this.context.options.placeholder;\r\n        }\r\n        if(!this.context.options.showbuttons){\r\n            element.addEventListener('change', () => {\r\n                if(this.form){\r\n                    this.form.dispatchEvent(new Event('submit'));\r\n                }\r\n            });\r\n        }\r\n        this.add_focus(element);\r\n        return element;\r\n    }\r\n\r\n    add_focus(element: HTMLInputElement): void\r\n    {\r\n        this.context.element.addEventListener('shown', function(){\r\n            element.focus();\r\n        });\r\n    }\r\n\r\n    initText(): boolean\r\n    {\r\n        if(this.context.getValue() === ''){\r\n            this.context.element.innerHTML = this.context.options.emptytext || '';\r\n            return true;\r\n        } else {\r\n            this.context.element.innerHTML = this.context.getValue();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n\r\n    }\r\n\r\n    getValue(): string\r\n    {\r\n        return this.element ? this.element.value : '';\r\n    }\r\n}","import BaseType from './BaseType.js';\r\n\r\nexport default class InputType extends BaseType{\r\n    create(){\r\n        const input = this.createElement(`input`);\r\n        input.type = typeof this.context.options.type === 'string' ? this.context.options.type : 'text';\r\n\r\n        const { options = {} } = this.context;\r\n\r\n        input.type = typeof options.type === 'string' ? options.type : 'text';\r\n\r\n        const inputAttrs = options.attributes || {};\r\n        const allowedAttributes = [\r\n\t        'step', 'min', 'max',\r\n\t        'minlength', 'maxlength',\r\n\t        'pattern', 'placeholder',\r\n\t        'required', 'readonly',\r\n\t        'disabled', 'autocomplete',\r\n\t        'autofocus', 'name', 'value'\r\n        ];\r\n        for (const [key, value] of Object.entries(inputAttrs)) {\r\n\t        if (allowedAttributes.includes(key) && value !== undefined) {\r\n\t\t        input.setAttribute(key, String(value));\r\n\t        }\r\n        }\r\n\r\n        return this.createContainer(input);\r\n    }\r\n}","import BaseType from './BaseType.js';\r\n\r\nexport default class TextAreaType extends BaseType{\r\n    create(){\r\n        const textarea = this.createElement(`textarea`);\r\n\r\n        return this.createContainer(textarea);\r\n    }\r\n}","import BaseType from './BaseType.js';\r\n\r\nexport default class SelectType extends BaseType{\r\n    create(){\r\n        const select = this.createElement(`select`);\r\n        if(this.context.options.source && Array.isArray(this.context.options.source)) {\r\n            this.context.options.source.forEach(item => {\r\n                const opt = document.createElement(`option`);\r\n                opt.value = item.value;\r\n                opt.innerHTML = item.text;\r\n                select.append(opt);\r\n            });\r\n        }\r\n\r\n        return this.createContainer(select);\r\n    }\r\n\r\n    initText(){\r\n        this.context.element.innerHTML = this.context.options.emptytext || '';\r\n        if(this.context.getValue() !== '' && this.context.options.source && Array.isArray(this.context.options.source) && this.context.options.source.length > 0){\r\n            for(let i = 0; i < this.context.options.source.length; i++){\r\n                const item = this.context.options.source[ i ];\r\n                if( item.value == this.context.getValue()){\r\n                    this.context.element.innerHTML = item.text;\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    initOptions(){\r\n        this.context.get_opt('source', []);\r\n        if(this.context.options && typeof this.context.options.source === 'string' && this.context.options.source !== ''){\r\n            this.context.options.source = JSON.parse(this.context.options.source);\r\n        }\r\n    }\r\n}","import BaseType from './BaseType.js';\r\n\r\nexport default class DateType extends BaseType{\r\n    create(){\r\n        const input = this.createElement(`input`);\r\n        input.type = 'date';\r\n\r\n        return this.createContainer(input);\r\n    }\r\n\r\n    initText(): boolean\r\n    {\r\n\t    const value = this.context.getValue();\r\n\t    if (value === '') {\r\n            this.context.element.innerHTML = this.context.options.emptytext || '';\r\n            return true;\r\n        } else {\r\n            this.context.element.innerHTML = value;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n\t    //const format = this.context.get_opt(\"format\", \"YYYY-MM-DD\");\r\n\t    //const viewformat = this.context.get_opt(\"viewformat\", \"YYYY-MM-DD\");\r\n\t    this.context.setValue(this.context.getValue());\r\n    }\r\n}","import DateType from './DateType.js';\r\n\r\nexport default class DateTimeType extends DateType{\r\n    create(){\r\n        const input = this.createElement(`input`);\r\n        input.type = 'datetime-local';\r\n\r\n        return this.createContainer(input);\r\n    }\r\n\r\n    initOptions(): void\r\n    {\r\n\t    //const format = this.context.get_opt(\"format\", \"YYYY-MM-DD HH:mm\");\r\n\t    //const viewformat = this.context.get_opt(\"viewformat\", \"YYYY-MM-DD HH:mm\");\r\n\t    this.context.setValue(this.context.getValue());\r\n    }\r\n}","import PopupMode from './Modes/PopupMode.ts';\r\nimport InlineMode from './Modes/InlineMode.ts';\r\nimport BaseType from './Types/BaseType.ts';\r\nimport InputType from './Types/InputType.ts';\r\nimport TextAreaType from './Types/TextAreaType.ts';\r\nimport SelectType from './Types/SelectType.ts';\r\nimport DateType from './Types/DateType.ts';\r\nimport DateTimeType from './Types/DateTimeType.ts';\r\nimport Options from './Interfaces/Options.ts';\r\nimport BaseMode from './Modes/BaseMode.ts';\r\n\r\nimport './dark-editable.css';\r\n\r\nexport default class DarkEditable{\r\n    element: HTMLElement;\r\n    options: Options;\r\n\r\n    typeElement: BaseType;\r\n    modeElement: BaseMode;\r\n\r\n    constructor(element: HTMLElement, options: Options = {}) {\r\n        this.element = element;\r\n        this.options = { ...options };\r\n        \r\n        this.init_options();\r\n        this.typeElement = this.route_type();\r\n        this.typeElement.initOptions();\r\n        this.modeElement = this.route_mode();\r\n        this.modeElement.init();\r\n        this.setValue(this.element.innerHTML);\r\n        this.init_style();\r\n        if(this.options.disabled){\r\n            this.disable();\r\n        }\r\n        this.element.dispatchEvent(new CustomEvent('init', { detail: { DarkEditable: this } }));\r\n    }\r\n\r\n    /* INIT METHODS */\r\n\r\n    get_opt(name: string, default_value: any): any\r\n    {\r\n        // @ts-ignore\r\n        return this.options[name] = this.element.dataset?.[ name ] ?? this.options?.[ name ] ?? default_value;\r\n    }\r\n\r\n    get_opt_bool(name: string, default_value: any): void\r\n    {\r\n        this.get_opt(name, default_value);\r\n        // @ts-ignore\r\n        if(typeof this.options[ name ] !== 'boolean'){\r\n            // @ts-ignore\r\n            if(this.options[ name ] === 'true') {\r\n                // @ts-ignore\r\n                this.options[ name ] = true;\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            if(this.options[ name ] === 'false') {\r\n                // @ts-ignore\r\n                this.options[ name ] = false;\r\n                return;\r\n            }\r\n            // @ts-ignore\r\n            this.options[ name ] = default_value;\r\n        }\r\n    }\r\n\r\n    init_options(): void\r\n    {\r\n\t\t\r\n\t\t//priority date elements\r\n        this.get_opt('value', this.element.innerHTML);\r\n        this.get_opt('name', this.element.id);\r\n        this.get_opt('id', null);\r\n        this.get_opt('title', '');\r\n        this.get_opt('type', 'text');\r\n        this.get_opt('emptytext', 'Empty');\r\n        this.get_opt('placeholder', this.element.getAttribute('placeholder'));\r\n        this.get_opt('mode', 'popup');\r\n        this.get_opt('url', null);\r\n        this.get_opt('ajaxOptions', {});\r\n        this.options.ajaxOptions = Object.assign({\r\n            method: 'POST',\r\n            dataType: 'text',\r\n\t\t\theaders: {\r\n\t\t\t\tRequestVerificationToken: (document.querySelector('input[name=\"__RequestVerificationToken\"]') as HTMLInputElement)?.value\r\n\t\t\t}\r\n        }, this.options.ajaxOptions);\r\n        this.get_opt_bool('send', true);\r\n        this.get_opt_bool('disabled', false);\r\n        this.get_opt_bool('required', false);\r\n        this.get_opt_bool('showbuttons', true);\r\n        if(this.options?.success && typeof this.options?.success === 'function'){\r\n            this.success = this.options.success;\r\n        }\r\n        if(this.options?.error && typeof this.options?.error === 'function'){\r\n            this.error = this.options.error;\r\n        }\r\n        this.get_opt('attributes', {});\r\n        this.get_opt('popoverOptions', {});\r\n    }\r\n\r\n    init_text(){\r\n        const empty_class = 'dark-editable-element-empty';\r\n        this.element.classList.remove(empty_class);\r\n        if(this.typeElement.initText()){\r\n            this.element.classList.add(empty_class);\r\n        }\r\n    }\r\n\r\n    init_style(){\r\n        this.element.classList.add('dark-editable-element');\r\n    }\r\n\r\n    /* INIT METHODS END */\r\n    route_mode(){\r\n        switch (this.options.mode){\r\n            default:\r\n                throw new Error(`Mode ${this.options.mode} not found!`)\r\n            case 'popup':\r\n                return new PopupMode(this);\r\n            case 'inline':\r\n                return new InlineMode(this);\r\n        }\r\n    }\r\n\r\n    route_type(): BaseType\r\n    {\r\n        if(this.options.type && typeof this.options.type !== 'string'){\r\n            // @ts-ignore\r\n            return new this.options.type(this);\r\n        }\r\n        switch (this.options.type) {\r\n            case 'text':\r\n            case 'password':\r\n            case 'email':\r\n            case 'url':\r\n            case 'tel':\r\n            case 'number':\r\n            case 'range':\r\n            case 'time':\r\n                return new InputType(this);\r\n            case 'textarea':\r\n                return new TextAreaType(this);\r\n            case 'select':\r\n                return new SelectType(this);\r\n            case 'date':\r\n                return new DateType(this);\r\n            case 'datetime':\r\n                return new DateTimeType(this);\r\n        }\r\n        throw new Error(`Undefined type`);\r\n    }\r\n\r\n    /* AJAX */\r\n\r\n    async success(response: Response, newValue: string): Promise<any>\r\n    {\r\n        return await this.typeElement.successResponse(response, newValue);\r\n    }\r\n\r\n    async error(response: Response, newValue: string): Promise<any>\r\n    {\r\n        return await this.typeElement.errorResponse(response, newValue);\r\n    }\r\n\r\n    /* AJAX END */\r\n\r\n    /* METHODS */\r\n\r\n    enable(): void\r\n    {\r\n        this.options.disabled = false;\r\n        this.element.classList.remove('dark-editable-element-disabled');\r\n        this.modeElement.enable();\r\n    }\r\n\r\n    disable(): void\r\n    {\r\n        this.options.disabled = true;\r\n        this.element.classList.add('dark-editable-element-disabled');\r\n        this.modeElement.enable();\r\n    }\r\n\r\n    setValue(value: string): void\r\n    {\r\n        this.options.value = value;\r\n        this.init_text();\r\n    }\r\n\r\n    getValue(): string\r\n    {\r\n        return this.options.value ?? '';\r\n    }\r\n\r\n    getOption(name: string): any {\r\n\t    // @ts-ignore\r\n\t    return this.options[name] ?? null;\r\n    }\r\n\r\n    /* METHODS END */\r\n}"],"names":["BaseMode","context","PopupMode","options","Popover","target","current","InlineMode","open","item","BaseType","element","div","form","newValue","msg","response","error","loader","button","btn_success","btn_cancel","new_value","url","params","value","key","ajaxOptions","_response","_newValue","errorMsg","name","InputType","input","inputAttrs","allowedAttributes","TextAreaType","textarea","SelectType","select","opt","i","DateType","DateTimeType","DarkEditable","default_value","empty_class"],"mappings":";AAEA,MAAqBA,EAAQ;AAAA,EACzB;AAAA,EAEA,YAAYC,GAAuB;AAC/B,QAAG,KAAK,gBAAgBD;AACpB,YAAM,IAAI,MAAM,qBAAqB;AAEzC,SAAK,UAAUC;AAAA,EAAA;AAAA,EAEnB,aAAY;AAER,QADA,KAAK,QAAQ,YAAY,UAAA,GACtB,CAAC,KAAK,QAAQ,YAAY;AACzB,YAAM,IAAI,MAAM,qBAAqB;AAEzC,SAAK,QAAQ,YAAY,QAAQ,QAAQ,KAAK,QAAQ,SAAA,GACtD,KAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,QAAQ,EAAE,QAAQ,EAAE,cAAc,KAAK,QAAA,EAAQ,CAAG,CAAC;AAAA,EAAA;AAAA,EAE1G,cAAa;AACT,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,SAAS,EAAE,QAAQ,EAAE,cAAc,KAAK,QAAA,EAAQ,CAAG,CAAC;AAAA,EAAA;AAAA,EAE3G,aAAY;AACR,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,QAAQ,EAAE,QAAQ,EAAE,cAAc,KAAK,QAAA,EAAQ,CAAG,CAAC;AAAA,EAAA;AAAA,EAE1G,eAAc;AACV,SAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,UAAU,EAAE,QAAQ,EAAE,cAAc,KAAK,QAAA,EAAQ,CAAG,CAAC;AAAA,EAAA;AAAA,EAE5G,OAAM;AACF,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAAA;AAAA,EAE/C,SAAQ;AACJ,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAAA;AAAA,EAEjD,UAAS;AACL,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAAA;AAAA,EAElD,OAAM;AACF,UAAM,IAAI,MAAM,2BAA2B;AAAA,EAAA;AAEnD;ACrCA,MAAqBC,UAAkBF,EAAQ;AAAA,EAE3C,UAAwB;AAAA,EAExB,OAAM;AACL,UAAMG,IAAU;AAAA,MACT,WAAW;AAAA,MACX,SAAS,KAAK,QAAQ,YAAY,OAAA;AAAA,MAClC,MAAM;AAAA,MACN,aAAa;AAAA,MACb,OAAO,KAAK,QAAQ,QAAQ;AAAA,IAAA;AAEnC,SAAK,UAAU,IAAIC,EAAQ,KAAK,QAAQ,SAAS,OAAO;AAAA,MACvDD;AAAA,MACA,KAAK,QAAQ,QAAQ;AAAA,IAAA,CACrB,GACE,KAAK,QAAQ,QAAQ,iBAAiB,mBAAmB,MAAM;AAC3D,WAAK,WAAA;AAAA,IAAW,CACnB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,oBAAoB,MAAM;AAC5D,WAAK,YAAA;AAAA,IAAY,CACpB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,mBAAmB,MAAM;AAC3D,WAAK,WAAA;AAAA,IAAW,CACnB,GACD,KAAK,QAAQ,QAAQ,iBAAiB,qBAAqB,MAAM;AAC7D,WAAK,aAAA;AAAA,IAAa,CACrB,GAED,SAAS,iBAAiB,SAAS,CAAC,MAAM;AACtC,YAAME,IAAsB,EAAE;AAE9B,UAAG,KAAK,WAAWA,MAAW,KAAK,QAAQ,OAAOA,MAAW,KAAK,QAAQ,QAAS;AACnF,UAAIC,IAAUD,EAAO;AACrB,aAAMC,KAAQ;AAEV,YAAGA,MAAY,KAAK,QAAQ,IAAK;AACjC,QAAAA,IAAUA,EAAQ;AAAA,MAAA;AAEtB,WAAK,KAAA;AAAA,IAAK,CACb;AAAA,EAAA;AAAA,EAEL,SACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,OAAA;AAAA,EACjB;AAAA,EAEJ,UACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,QAAA;AAAA,EACjB;AAAA,EAEJ,OACA;AACI,IAAG,KAAK,WACJ,KAAK,QAAQ,KAAA;AAAA,EACjB;AAER;AC7DA,MAAqBC,UAAmBP,EAAQ;AAAA,EAC5C,OAAM;AACF,UAAMQ,IAAO,MAAM;AACf,UAAG,CAAC,KAAK,QAAQ,QAAQ,UAAS;AAC9B,cAAMC,IAAO,KAAK,QAAQ,YAAY,OAAA;AACtC,aAAK,WAAA,GACL,KAAK,QAAQ,QAAQ,oBAAoB,SAASD,CAAI,GACtD,KAAK,QAAQ,QAAQ,YAAY,IACjC,KAAK,QAAQ,QAAQ,OAAOC,CAAI,GAChC,KAAK,YAAA;AAAA,MAAY;AAAA,IACrB;AAEJ,SAAK,QAAQ,QAAQ,iBAAiB,SAASD,CAAI;AAAA,EAAA;AAAA,EAEvD,SAAQ;AAAA,EAAA;AAAA,EAGR,UAAS;AAAA,EAAA;AAAA,EAGT,OAAM;AACF,SAAK,WAAA,GACL,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,SAAA,GAC9C,WAAW,MAAM;AACb,WAAK,KAAA,GACL,KAAK,aAAA;AAAA,IAAa,GACnB,GAAG;AAAA,EAAA;AAEd;AC3BA,MAAqBE,EAAQ;AAAA,EACzB;AAAA,EACA,UAAiC;AAAA,EACjC,QAA0B;AAAA,EAC1B,OAAyB;AAAA,EACzB,OAA0B;AAAA,EAC1B,UAA2B,EAAC,SAAS,MAAM,QAAQ,KAAA;AAAA,EAEnD,YAAYT,GAAuB;AAC/B,QAAG,KAAK,gBAAgBS;AACpB,YAAM,IAAI,MAAM,qBAAqB;AAEzC,SAAK,UAAUT;AAAA,EAAA;AAAA,EAGnB,SACA;AACI,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAAA;AAAA,EAGjD,gBAAgBU,GAChB;AACI,UAAMC,IAAM,SAAS,cAAc,KAAK;AACxC,gBAAK,UAAUD,GACf,KAAK,QAAQ,KAAK,qBAAA,GAClB,KAAK,OAAO,KAAK,oBAAA,GACjB,KAAK,OAAO,KAAK,oBAAA,GACjB,KAAK,KAAK,OAAOA,GAAS,KAAK,IAAI,GACnC,KAAK,QAAQ,UAAU,MACvB,KAAK,QAAQ,SAAS,MACnB,KAAK,QAAQ,QAAQ,gBACpB,KAAK,QAAQ,UAAU,KAAK,oBAAA,GAC5B,KAAK,QAAQ,SAAS,KAAK,mBAAA,GAC3B,KAAK,KAAK,OAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,MAAM,IAG9DC,EAAI,OAAO,KAAK,OAAO,KAAK,IAAI,GACzBA;AAAA,EAAA;AAAA,EAGX,uBACA;AACI,UAAMA,IAAM,SAAS,cAAc,KAAK;AACxC,WAAAA,EAAI,UAAU,IAAI,eAAe,cAAc,QAAQ,SAAS,GAChEA,EAAI,MAAM,UAAU,QACbA;AAAA,EAAA;AAAA,EAGX,sBACA;AACI,UAAMC,IAAO,SAAS,cAAc,MAAM;AAC1C,WAAAA,EAAK,UAAU,IAAI,UAAU,mBAAmB,GAChDA,EAAK,MAAM,MAAM,QACjBA,EAAK,iBAAiB,UAAU,OAAM,MAAK;AACvC,QAAE,eAAA;AACF,YAAMC,IAAW,KAAK,SAAA;AACtB,UAAG,KAAK,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KAAK,QAAQ,QAAQ,OAAQ,KAAK,QAAQ,SAAA,MAAeA,GAAU;AAC1H,aAAK,SAAA;AACL,YAAIC;AACJ,YAAI;AACA,gBAAMC,IAAW,MAAM,KAAK,KAAKF,CAAQ;AACzC,UAAGE,EAAS,KACRD,IAAM,MAAM,KAAK,QAAQ,QAAQC,GAAUF,CAAQ,IAEnDC,IAAM,MAAM,KAAK,QAAQ,MAAMC,GAAUF,CAAQ,KAAK,GAAGE,EAAS,MAAM,IAAIA,EAAS,UAAU;AAAA,QACnG,SACKC,GAAO;AACZ,kBAAQ,MAAMA,CAAK,GACnBF,IAAME;AAAA,QAAA;AAGV,QAAGF,KACC,KAAK,SAASA,CAAG,GACjB,KAAK,UAAA,MAEL,KAAK,SAAS,EAAE,GAChB,KAAK,UAAA,GACL,KAAK,QAAQ,SAAS,KAAK,SAAA,CAAU,GACrC,KAAK,QAAQ,YAAY,KAAA,GACzB,KAAK,SAAA,IAET,KAAK,SAAA;AAAA,MAAS;AAEd,aAAK,QAAQ,SAAS,KAAK,SAAA,CAAU,GACrC,KAAK,QAAQ,YAAY,KAAA,GACzB,KAAK,SAAA;AAET,WAAK,QAAQ,QAAQ,cAAc,IAAI,YAAY,QAAQ,EAAE,QAAQ,EAAE,cAAc,KAAK,QAAA,EAAQ,CAAG,CAAC;AAAA,IAAA,CACzG,GACMF;AAAA,EAAA;AAAA,EAGX,sBACA;AACI,UAAMD,IAAM,SAAS,cAAc,KAAK;AACxC,IAAAA,EAAI,MAAM,UAAU,QACpBA,EAAI,MAAM,WAAW,YACrBA,EAAI,MAAM,aAAa,SACvBA,EAAI,MAAM,QAAQ,QAClBA,EAAI,MAAM,SAAS,QACnBA,EAAI,MAAM,MAAM,KAChBA,EAAI,MAAM,OAAO;AACjB,UAAMM,IAAS,SAAS,cAAc,KAAK;AAC3C,WAAAA,EAAO,UAAU,IAAI,sBAAsB,GAC3CN,EAAI,OAAOM,CAAM,GACVN;AAAA,EAAA;AAAA,EAGX,eACA;AACI,UAAMO,IAAS,SAAS,cAAc,QAAQ;AAC9C,WAAAA,EAAO,OAAO,UACdA,EAAO,UAAU,IAAI,OAAO,QAAQ,GAC7BA;AAAA,EAAA;AAAA,EAGX,sBACA;AACI,UAAMC,IAAc,KAAK,aAAA;AACzB,WAAAA,EAAY,OAAO,UACnBA,EAAY,UAAU,IAAI,aAAa,GACvCA,EAAY,YAAY,qCACjBA;AAAA,EAAA;AAAA,EAGX,qBACA;AACI,UAAMC,IAAa,KAAK,aAAA;AACxB,WAAAA,EAAW,UAAU,IAAI,YAAY,GACrCA,EAAW,YAAY,qCACvBA,EAAW,iBAAiB,SAAS,MAAM;AACvC,WAAK,QAAQ,YAAY,KAAA;AAAA,IAAK,CACjC,GACMA;AAAA,EAAA;AAAA,EAGX,WACA;AACI,IAAG,KAAK,SACJ,KAAK,KAAK,MAAM,UAAU;AAAA,EAC9B;AAAA,EAGJ,WACA;AACI,IAAG,KAAK,SACJ,KAAK,KAAK,MAAM,UAAU;AAAA,EAC9B;AAAA,EAGJ,KAAKC,GACL;AACI,QAAIC,IAAM,KAAK,QAAQ,QAAQ;AAC/B,QAAG,CAACA;AACA,YAAM,IAAI,MAAM,kBAAkB;AAEtC,QAAG,CAAC,KAAK,QAAQ,QAAQ;AACrB,YAAM,IAAI,MAAM,iBAAiB;AAErC,QAAG,CAAC,KAAK,QAAQ,QAAQ;AACrB,YAAM,IAAI,MAAM,mBAAmB;AAEvC,UAAMV,IAAO,IAAI,SAAA;AAKjB,QAJAA,EAAK,OAAO,MAAM,KAAK,QAAQ,QAAQ,EAAE,GACzCA,EAAK,OAAO,QAAQ,KAAK,QAAQ,QAAQ,IAAI,GAC7CA,EAAK,OAAO,SAASS,CAAS,GAE3B,KAAK,QAAQ,QAAQ,aAAa,WAAW,OAAM;AAClD,YAAME,IAAoB,CAAA;AAC1B,MAAAX,EAAK,QAAQ,CAACY,GAAOC,MAAQ;AACzB,QAAAF,EAAO,KAAK,GAAGE,CAAG,IAAID,CAAK,EAAE;AAAA,MAAA,CAChC,GACDF,KAAO,MAAMC,EAAO,KAAK,GAAG;AAAA,IAAA;AAGtC,UAAMG,IAAc,EAAC,GAAG,KAAK,QAAQ,QAAQ,YAAA;AACvC,WAAAA,EAAY,OAAOd,GACZ,MAAMU,GAAKI,CAAW;AAAA,EAAA;AAAA,EAGjC,MAAM,gBAAgBC,GAAqBC,GAC3C;AAAA,EAAA;AAAA,EAIA,MAAM,cAAcD,GAAqBC,GACzC;AAAA,EAAA;AAAA,EAIA,SAASC,GACT;AACI,IAAG,KAAK,UACJ,KAAK,MAAM,YAAYA;AAAA,EAC3B;AAAA,EAGJ,YACA;AACI,IAAG,KAAK,UACJ,KAAK,MAAM,MAAM,UAAU;AAAA,EAC/B;AAAA,EAGJ,YACA;AACI,IAAG,KAAK,UACJ,KAAK,MAAM,MAAM,UAAU;AAAA,EAC/B;AAAA,EAGJ,cAAcC,GACd;AACI,UAAMpB,IAA4B,SAAS,cAAcoB,CAAI;AAC7D,WAAApB,EAAQ,UAAU,IAAI,cAAc,GACjC,KAAK,QAAQ,QAAQ,aACpBA,EAAQ,WAAW,KAAK,QAAQ,QAAQ,WAE/C,KAAK,QAAQ,QAAQ,gBACdA,EAAQ,cAAc,KAAK,QAAQ,QAAQ,cAE3C,KAAK,QAAQ,QAAQ,eACrBA,EAAQ,iBAAiB,UAAU,MAAM;AACrC,MAAG,KAAK,QACJ,KAAK,KAAK,cAAc,IAAI,MAAM,QAAQ,CAAC;AAAA,IAC/C,CACH,GAEL,KAAK,UAAUA,CAAO,GACfA;AAAA,EAAA;AAAA,EAGX,UAAUA,GACV;AACI,SAAK,QAAQ,QAAQ,iBAAiB,SAAS,WAAU;AACrD,MAAAA,EAAQ,MAAA;AAAA,IAAM,CACjB;AAAA,EAAA;AAAA,EAGL,WACA;AACI,WAAG,KAAK,QAAQ,SAAA,MAAe,MAC3B,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAC5D,OAEP,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,SAAA,GACvC;AAAA,EACX;AAAA,EAGJ,cACA;AAAA,EAAA;AAAA,EAIA,WACA;AACI,WAAO,KAAK,UAAU,KAAK,QAAQ,QAAQ;AAAA,EAAA;AAEnD;ACpQA,MAAqBqB,UAAkBtB,EAAQ;AAAA,EAC3C,SAAQ;AACJ,UAAMuB,IAAQ,KAAK,cAAc,OAAO;AACxC,IAAAA,EAAM,OAAO,OAAO,KAAK,QAAQ,QAAQ,QAAS,WAAW,KAAK,QAAQ,QAAQ,OAAO;AAEzF,UAAM,EAAE,SAAA9B,IAAU,GAAC,IAAM,KAAK;AAE9B,IAAA8B,EAAM,OAAO,OAAO9B,EAAQ,QAAS,WAAWA,EAAQ,OAAO;AAE/D,UAAM+B,IAAa/B,EAAQ,cAAc,CAAA,GACnCgC,IAAoB;AAAA,MACzB;AAAA,MAAQ;AAAA,MAAO;AAAA,MACf;AAAA,MAAa;AAAA,MACb;AAAA,MAAW;AAAA,MACX;AAAA,MAAY;AAAA,MACZ;AAAA,MAAY;AAAA,MACZ;AAAA,MAAa;AAAA,MAAQ;AAAA,IAAA;AAEtB,eAAW,CAACT,GAAKD,CAAK,KAAK,OAAO,QAAQS,CAAU;AACnD,MAAIC,EAAkB,SAAST,CAAG,KAAKD,MAAU,UAChDQ,EAAM,aAAaP,GAAK,OAAOD,CAAK,CAAC;AAIvC,WAAO,KAAK,gBAAgBQ,CAAK;AAAA,EAAA;AAEzC;AC1BA,MAAqBG,UAAqB1B,EAAQ;AAAA,EAC9C,SAAQ;AACJ,UAAM2B,IAAW,KAAK,cAAc,UAAU;AAE9C,WAAO,KAAK,gBAAgBA,CAAQ;AAAA,EAAA;AAE5C;ACNA,MAAqBC,UAAmB5B,EAAQ;AAAA,EAC5C,SAAQ;AACJ,UAAM6B,IAAS,KAAK,cAAc,QAAQ;AAC1C,WAAG,KAAK,QAAQ,QAAQ,UAAU,MAAM,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KACvE,KAAK,QAAQ,QAAQ,OAAO,QAAQ,CAAA9B,MAAQ;AACxC,YAAM+B,IAAM,SAAS,cAAc,QAAQ;AAC3C,MAAAA,EAAI,QAAQ/B,EAAK,OACjB+B,EAAI,YAAY/B,EAAK,MACrB8B,EAAO,OAAOC,CAAG;AAAA,IAAA,CACpB,GAGE,KAAK,gBAAgBD,CAAM;AAAA,EAAA;AAAA,EAGtC,WAAU;AAEN,QADA,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAChE,KAAK,QAAQ,eAAe,MAAM,KAAK,QAAQ,QAAQ,UAAU,MAAM,QAAQ,KAAK,QAAQ,QAAQ,MAAM,KAAK,KAAK,QAAQ,QAAQ,OAAO,SAAS;AACnJ,eAAQE,IAAI,GAAGA,IAAI,KAAK,QAAQ,QAAQ,OAAO,QAAQA,KAAI;AACvD,cAAMhC,IAAO,KAAK,QAAQ,QAAQ,OAAQgC,CAAE;AAC5C,YAAIhC,EAAK,SAAS,KAAK,QAAQ;AAC3B,sBAAK,QAAQ,QAAQ,YAAYA,EAAK,MAC/B;AAAA,MACX;AAGR,WAAO;AAAA,EAAA;AAAA,EAGX,cAAa;AACT,SAAK,QAAQ,QAAQ,UAAU,CAAA,CAAE,GAC9B,KAAK,QAAQ,WAAW,OAAO,KAAK,QAAQ,QAAQ,UAAW,YAAY,KAAK,QAAQ,QAAQ,WAAW,OAC1G,KAAK,QAAQ,QAAQ,SAAS,KAAK,MAAM,KAAK,QAAQ,QAAQ,MAAM;AAAA,EACxE;AAER;ACnCA,MAAqBiC,UAAiBhC,EAAQ;AAAA,EAC1C,SAAQ;AACJ,UAAMuB,IAAQ,KAAK,cAAc,OAAO;AACxC,WAAAA,EAAM,OAAO,QAEN,KAAK,gBAAgBA,CAAK;AAAA,EAAA;AAAA,EAGrC,WACA;AACC,UAAMR,IAAQ,KAAK,QAAQ,SAAA;AAC3B,WAAIA,MAAU,MACP,KAAK,QAAQ,QAAQ,YAAY,KAAK,QAAQ,QAAQ,aAAa,IAC5D,OAEP,KAAK,QAAQ,QAAQ,YAAYA,GAC1B;AAAA,EACX;AAAA,EAGJ,cACA;AAGC,SAAK,QAAQ,SAAS,KAAK,QAAQ,UAAU;AAAA,EAAA;AAElD;AC1BA,MAAqBkB,UAAqBD,EAAQ;AAAA,EAC9C,SAAQ;AACJ,UAAMT,IAAQ,KAAK,cAAc,OAAO;AACxC,WAAAA,EAAM,OAAO,kBAEN,KAAK,gBAAgBA,CAAK;AAAA,EAAA;AAAA,EAGrC,cACA;AAGC,SAAK,QAAQ,SAAS,KAAK,QAAQ,UAAU;AAAA,EAAA;AAElD;ACHA,MAAqBW,EAAY;AAAA,EAC7B;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA,YAAYjC,GAAsBR,IAAmB,IAAI;AACrD,SAAK,UAAUQ,GACf,KAAK,UAAU,EAAE,GAAGR,EAAA,GAEpB,KAAK,aAAA,GACL,KAAK,cAAc,KAAK,WAAA,GACxB,KAAK,YAAY,YAAA,GACjB,KAAK,cAAc,KAAK,WAAA,GACxB,KAAK,YAAY,KAAA,GACjB,KAAK,SAAS,KAAK,QAAQ,SAAS,GACpC,KAAK,WAAA,GACF,KAAK,QAAQ,YACZ,KAAK,QAAA,GAET,KAAK,QAAQ,cAAc,IAAI,YAAY,QAAQ,EAAE,QAAQ,EAAE,cAAc,KAAA,EAAK,CAAG,CAAC;AAAA,EAAA;AAAA;AAAA,EAK1F,QAAQ4B,GAAcc,GACtB;AAEI,WAAO,KAAK,QAAQd,CAAI,IAAI,KAAK,QAAQ,UAAWA,CAAK,KAAK,KAAK,UAAWA,CAAK,KAAKc;AAAA,EAAA;AAAA,EAG5F,aAAad,GAAcc,GAC3B;AAGI,QAFA,KAAK,QAAQd,GAAMc,CAAa,GAE7B,OAAO,KAAK,QAASd,CAAK,KAAM,WAAU;AAEzC,UAAG,KAAK,QAASA,CAAK,MAAM,QAAQ;AAEhC,aAAK,QAASA,CAAK,IAAI;AACvB;AAAA,MAAA;AAGJ,UAAG,KAAK,QAASA,CAAK,MAAM,SAAS;AAEjC,aAAK,QAASA,CAAK,IAAI;AACvB;AAAA,MAAA;AAGJ,WAAK,QAASA,CAAK,IAAIc;AAAA,IAAA;AAAA,EAC3B;AAAA,EAGJ,eACA;AAGI,SAAK,QAAQ,SAAS,KAAK,QAAQ,SAAS,GAC5C,KAAK,QAAQ,QAAQ,KAAK,QAAQ,EAAE,GACpC,KAAK,QAAQ,MAAM,IAAI,GACvB,KAAK,QAAQ,SAAS,EAAE,GACxB,KAAK,QAAQ,QAAQ,MAAM,GAC3B,KAAK,QAAQ,aAAa,OAAO,GACjC,KAAK,QAAQ,eAAe,KAAK,QAAQ,aAAa,aAAa,CAAC,GACpE,KAAK,QAAQ,QAAQ,OAAO,GAC5B,KAAK,QAAQ,OAAO,IAAI,GACxB,KAAK,QAAQ,eAAe,EAAE,GAC9B,KAAK,QAAQ,cAAc,OAAO,OAAO;AAAA,MACrC,QAAQ;AAAA,MACR,UAAU;AAAA,MACnB,SAAS;AAAA,QACR,0BAA2B,SAAS,cAAc,0CAA0C,GAAwB;AAAA,MAAA;AAAA,IACrH,GACQ,KAAK,QAAQ,WAAW,GAC3B,KAAK,aAAa,QAAQ,EAAI,GAC9B,KAAK,aAAa,YAAY,EAAK,GACnC,KAAK,aAAa,YAAY,EAAK,GACnC,KAAK,aAAa,eAAe,EAAI,GAClC,KAAK,SAAS,WAAW,OAAO,KAAK,SAAS,WAAY,eACzD,KAAK,UAAU,KAAK,QAAQ,UAE7B,KAAK,SAAS,SAAS,OAAO,KAAK,SAAS,SAAU,eACrD,KAAK,QAAQ,KAAK,QAAQ,QAE9B,KAAK,QAAQ,cAAc,EAAE,GAC7B,KAAK,QAAQ,kBAAkB,EAAE;AAAA,EAAA;AAAA,EAGrC,YAAW;AACP,UAAMC,IAAc;AACpB,SAAK,QAAQ,UAAU,OAAOA,CAAW,GACtC,KAAK,YAAY,cAChB,KAAK,QAAQ,UAAU,IAAIA,CAAW;AAAA,EAC1C;AAAA,EAGJ,aAAY;AACR,SAAK,QAAQ,UAAU,IAAI,uBAAuB;AAAA,EAAA;AAAA;AAAA,EAItD,aAAY;AACR,YAAQ,KAAK,QAAQ,MAAA;AAAA,MACjB;AACI,cAAM,IAAI,MAAM,QAAQ,KAAK,QAAQ,IAAI,aAAa;AAAA,MAC1D,KAAK;AACD,eAAO,IAAI5C,EAAU,IAAI;AAAA,MAC7B,KAAK;AACD,eAAO,IAAIK,EAAW,IAAI;AAAA,IAAA;AAAA,EAClC;AAAA,EAGJ,aACA;AACI,QAAG,KAAK,QAAQ,QAAQ,OAAO,KAAK,QAAQ,QAAS;AAEjD,aAAO,IAAI,KAAK,QAAQ,KAAK,IAAI;AAErC,YAAQ,KAAK,QAAQ,MAAA;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,IAAIyB,EAAU,IAAI;AAAA,MAC7B,KAAK;AACD,eAAO,IAAII,EAAa,IAAI;AAAA,MAChC,KAAK;AACD,eAAO,IAAIE,EAAW,IAAI;AAAA,MAC9B,KAAK;AACD,eAAO,IAAII,EAAS,IAAI;AAAA,MAC5B,KAAK;AACD,eAAO,IAAIC,EAAa,IAAI;AAAA,IAAA;AAEpC,UAAM,IAAI,MAAM,gBAAgB;AAAA,EAAA;AAAA;AAAA,EAKpC,MAAM,QAAQ3B,GAAoBF,GAClC;AACI,WAAO,MAAM,KAAK,YAAY,gBAAgBE,GAAUF,CAAQ;AAAA,EAAA;AAAA,EAGpE,MAAM,MAAME,GAAoBF,GAChC;AACI,WAAO,MAAM,KAAK,YAAY,cAAcE,GAAUF,CAAQ;AAAA,EAAA;AAAA;AAAA;AAAA,EAOlE,SACA;AACI,SAAK,QAAQ,WAAW,IACxB,KAAK,QAAQ,UAAU,OAAO,gCAAgC,GAC9D,KAAK,YAAY,OAAA;AAAA,EAAO;AAAA,EAG5B,UACA;AACI,SAAK,QAAQ,WAAW,IACxB,KAAK,QAAQ,UAAU,IAAI,gCAAgC,GAC3D,KAAK,YAAY,OAAA;AAAA,EAAO;AAAA,EAG5B,SAASW,GACT;AACI,SAAK,QAAQ,QAAQA,GACrB,KAAK,UAAA;AAAA,EAAU;AAAA,EAGnB,WACA;AACI,WAAO,KAAK,QAAQ,SAAS;AAAA,EAAA;AAAA,EAGjC,UAAUM,GAAmB;AAE5B,WAAO,KAAK,QAAQA,CAAI,KAAK;AAAA,EAAA;AAAA;AAIlC;"}